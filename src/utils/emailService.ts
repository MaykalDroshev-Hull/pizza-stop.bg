import nodemailer from 'nodemailer'

interface EmailOptions {
  to: string
  name: string
}

interface PasswordResetEmailOptions {
  to: string
  name: string
  resetToken: string
  resetUrl: string
}

export class EmailService {
  private transporter: nodemailer.Transporter

  constructor() {
    this.transporter = nodemailer.createTransporter({
      service: 'gmail',
      auth: {
        user: process.env.NEXT_PUBLIC_EMAIL,
        pass: process.env.NEXT_PUBLIC_EMAIL_PASS,
      },
    })
  }

  async sendWelcomeEmail({ to, name }: EmailOptions): Promise<void> {
    const logoUrl = `${process.env.NEXT_PUBLIC_SUPABASE_URL}/storage/v1/object/public/public/images/home/logo.png`
    
    const htmlContent = `
      <!DOCTYPE html>
      <html lang="bg">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>–î–æ–±—Ä–µ –¥–æ—à–ª–∏ –≤ Pizza Stop!</title>
        <style>
          body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f8f9fa;
          }
          .email-container {
            background-color: white;
            border-radius: 12px;
            padding: 40px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
          }
          .logo {
            text-align: center;
            margin-bottom: 30px;
          }
          .logo img {
            max-width: 200px;
            height: auto;
          }
          .welcome-title {
            color: #d32f2f;
            font-size: 28px;
            font-weight: bold;
            text-align: center;
            margin-bottom: 20px;
          }
          .welcome-text {
            font-size: 16px;
            text-align: center;
            margin-bottom: 30px;
            color: #555;
          }
          .order-button {
            display: inline-block;
            background-color: #d32f2f;
            color: white;
            padding: 15px 30px;
            text-decoration: none;
            border-radius: 25px;
            font-weight: bold;
            font-size: 16px;
            text-align: center;
            margin: 20px auto;
            transition: background-color 0.3s ease;
          }
          .order-button:hover {
            background-color: #b71c1c;
          }
          .footer {
            text-align: center;
            margin-top: 40px;
            padding-top: 20px;
            border-top: 1px solid #eee;
            color: #888;
            font-size: 14px;
          }
          .highlight {
            color: #d32f2f;
            font-weight: bold;
          }
        </style>
      </head>
      <body>
        <div class="email-container">
          <div class="logo">
            <img src="${logoUrl}" alt="Pizza Stop Logo" />
          </div>
          
          <h1 class="welcome-title">–î–æ–±—Ä–µ –¥–æ—à–ª–∏ –≤ Pizza Stop! üçï</h1>
          
          <p class="welcome-text">
            –ó–¥—Ä–∞–≤–µ–π—Ç–µ, <span class="highlight">${name}</span>!<br><br>
            –†–∞–¥–≤–∞–º–µ —Å–µ, —á–µ —Å–µ –ø—Ä–∏—Å—ä–µ–¥–∏–Ω–∏—Ö—Ç–µ –∫—ä–º –Ω–∞—à–µ—Ç–æ —Å–µ–º–µ–π—Å—Ç–≤–æ!<br>
            –°–µ–≥–∞ –º–æ–∂–µ—Ç–µ –¥–∞ –ø–æ—Ä—ä—á–≤–∞—Ç–µ –Ω–∞–π-–≤–∫—É—Å–Ω–∏—Ç–µ –ø–∏—Ü–∏ –∏ —Ö—Ä–∞–Ω–∏ –æ—Ç –Ω–∞—Å.
          </p>
          
          <div style="text-align: center;">
            <a href="${process.env.NEXT_PUBLIC_SUPABASE_URL}/order" class="order-button">
              –ü–û–†–™–ß–ê–ô –û–¢ –¢–£–ö
            </a>
          </div>
          
          <p class="welcome-text">
            –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∏ –∑–∞ –¥–æ–≤–µ—Ä–∏–µ—Ç–æ!<br>
            –ï–∫–∏–ø—ä—Ç –Ω–∞ Pizza Stop
          </p>
          
          <div class="footer">
            <p>–¢–æ–∑–∏ –∏–º–µ–π–ª –µ –∏–∑–ø—Ä–∞—Ç–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ. –ú–æ–ª—è, –Ω–µ –æ—Ç–≥–æ–≤–∞—Ä—è–π—Ç–µ –Ω–∞ –Ω–µ–≥–æ.</p>
            <p>¬© 2024 Pizza Stop. –í—Å–∏—á–∫–∏ –ø—Ä–∞–≤–∞ –∑–∞–ø–∞–∑–µ–Ω–∏.</p>
          </div>
        </div>
      </body>
      </html>
    `

    const mailOptions = {
      from: `"Pizza Stop" <${process.env.NEXT_PUBLIC_EMAIL}>`,
      to,
      subject: '–î–æ–±—Ä–µ –¥–æ—à–ª–∏ –≤ Pizza Stop! üçï',
      html: htmlContent,
    }

    try {
      await this.transporter.sendMail(mailOptions)
      console.log(`Welcome email sent successfully to ${to}`)
    } catch (error) {
      console.error('Error sending welcome email:', error)
      throw new Error('Failed to send welcome email')
    }
  }

  async sendPasswordResetEmail({ to, name, resetToken, resetUrl }: PasswordResetEmailOptions): Promise<void> {
    const logoUrl = `${process.env.NEXT_PUBLIC_SUPABASE_URL}/storage/v1/object/public/public/images/home/logo.png`
    
    const htmlContent = `
      <!DOCTYPE html>
      <html lang="bg">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>–í—ä–∑—Å—Ç–∞–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ –ø–∞—Ä–æ–ª–∞ - Pizza Stop</title>
        <style>
          body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f8f9fa;
          }
          .email-container {
            background-color: white;
            border-radius: 12px;
            padding: 40px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
          }
          .logo {
            text-align: center;
            margin-bottom: 30px;
          }
          .logo img {
            max-width: 200px;
            height: auto;
          }
          .reset-title {
            color: #d32f2f;
            font-size: 28px;
            font-weight: bold;
            text-align: center;
            margin-bottom: 20px;
          }
          .reset-text {
            font-size: 16px;
            text-align: center;
            margin-bottom: 30px;
            color: #555;
          }
          .reset-button {
            display: inline-block;
            background-color: #d32f2f;
            color: white;
            padding: 15px 30px;
            text-decoration: none;
            border-radius: 25px;
            font-weight: bold;
            font-size: 16px;
            text-align: center;
            margin: 20px auto;
            transition: background-color 0.3s ease;
          }
          .reset-button:hover {
            background-color: #b71c1c;
          }
          .footer {
            text-align: center;
            margin-top: 40px;
            padding-top: 20px;
            border-top: 1px solid #eee;
            color: #888;
            font-size: 14px;
          }
          .highlight {
            color: #d32f2f;
            font-weight: bold;
          }
          .warning {
            background-color: #fff3cd;
            border: 1px solid #ffeaa7;
            border-radius: 8px;
            padding: 15px;
            margin: 20px 0;
            color: #856404;
          }
        </style>
      </head>
      <body>
        <div class="email-container">
          <div class="logo">
            <img src="${logoUrl}" alt="Pizza Stop Logo" />
          </div>
          
          <h1 class="reset-title">–í—ä–∑—Å—Ç–∞–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ –ø–∞—Ä–æ–ª–∞ üîê</h1>
          
          <p class="reset-text">
            –ó–¥—Ä–∞–≤–µ–π—Ç–µ, <span class="highlight">${name}</span>!<br><br>
            –ü–æ–ª—É—á–∏—Ö–º–µ –∑–∞—è–≤–∫–∞ –∑–∞ –≤—ä–∑—Å—Ç–∞–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ –ø–∞—Ä–æ–ª–∞—Ç–∞ –Ω–∞ –≤–∞—à–∏—è –∞–∫–∞—É–Ω—Ç.
          </p>
          
          <div style="text-align: center;">
            <a href="${resetUrl}" class="reset-button">
              –í–™–ó–°–¢–ê–ù–û–í–ò –ü–ê–†–û–õ–ê–¢–ê
            </a>
          </div>
          
          <div class="warning">
            <strong>‚ö†Ô∏è –í–∞–∂–Ω–æ:</strong><br>
            –¢–æ–∑–∏ –ª–∏–Ω–∫ –µ –≤–∞–ª–∏–¥–µ–Ω —Å–∞–º–æ 1 —á–∞—Å.<br>
            –ê–∫–æ –Ω–µ —Å—Ç–µ –≤–∏–µ –∑–∞—è–≤–∏–ª–∏ –≤—ä–∑—Å—Ç–∞–Ω–æ–≤—è–≤–∞–Ω–µ—Ç–æ, –º–æ–ª—è –∏–≥–Ω–æ—Ä–∏—Ä–∞–π—Ç–µ —Ç–æ–∑–∏ –∏–º–µ–π–ª.
          </div>
          
          <p class="reset-text">
            –ê–∫–æ –∏–º–∞—Ç–µ –ø—Ä–æ–±–ª–µ–º–∏ —Å –±—É—Ç–æ–Ω–∞, –∫–æ–ø–∏—Ä–∞–π—Ç–µ —Ç–æ–∑–∏ –ª–∏–Ω–∫ –≤ –±—Ä–∞—É–∑—ä—Ä–∞:<br>
            <a href="${resetUrl}" style="color: #d32f2f; word-break: break-all;">${resetUrl}</a>
          </p>
          
          <div class="footer">
            <p>–¢–æ–∑–∏ –∏–º–µ–π–ª –µ –∏–∑–ø—Ä–∞—Ç–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ. –ú–æ–ª—è, –Ω–µ –æ—Ç–≥–æ–≤–∞—Ä—è–π—Ç–µ –Ω–∞ –Ω–µ–≥–æ.</p>
            <p>¬© 2024 Pizza Stop. –í—Å–∏—á–∫–∏ –ø—Ä–∞–≤–∞ –∑–∞–ø–∞–∑–µ–Ω–∏.</p>
          </div>
        </div>
      </body>
      </html>
    `

    const mailOptions = {
      from: `"Pizza Stop" <${process.env.NEXT_PUBLIC_EMAIL}>`,
      to,
      subject: '–í—ä–∑—Å—Ç–∞–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ –ø–∞—Ä–æ–ª–∞ - Pizza Stop üîê',
      html: htmlContent,
    }

    try {
      await this.transporter.sendMail(mailOptions)
      console.log(`Password reset email sent successfully to ${to}`)
    } catch (error) {
      console.error('Error sending password reset email:', error)
      throw new Error('Failed to send password reset email')
    }
  }
}

export const emailService = new EmailService()
